  public Map<String, Double> calcluteVolume(Coordinate c1) {

    if (c1 != null) {
      currentPoint = c1;
    }

    if (currentPoint == null || clients.size() <= 1) {
      Set<String> keys = clients.keySet();
      Map<String, Double> temp = new HashMap<String, Double>();
      for (String s : keys) {
        temp.put(s, 1.0);
      }
      currentWeighting = temp;
      return temp;
    }

    currentPoint = c1;
    Coordinate[] coord = new Coordinate[1];
    coord[0] = new Coordinate(c1.x, c1.y);
    CoordinateSequence seq = new CoordinateArraySequence(coord);
    Point p1 = new Point(seq, new GeometryFactory());

    double dist = 0;
    double fade = 1;
    if (convexHull!=null && 
        !convexHull.getConvexHull().contains(p1)) {
      Coordinate cnew = placeWithinHull(p1, dist);
      double newDist = totalDistAway(cnew);

      double oldDist = totalDistAway(c1);

      fade = newDist / oldDist;
      c1 = cnew;
    }
    Map<String, Double> vol = new HashMap<String, Double>();

    for (String s : clients.keySet()) {
      vol.put(s, getWeighting(clients.get(s).getPoint(), c1, dist) * fade);
    }
    currentWeighting = vol;
    return vol;
  }

  public double getWeighting(Point p1, Coordinate vs, double dist) {

    double weight = 0;

    double distPoint = cartesianDist(p1.getCoordinate(), vs, 0);
    for (String s : clients.keySet()) {
      double di =
          cartesianDist(clients.get(s).getPoint().getCoordinate(), vs, 0);
      
      weight +=
          Math.pow(distPoint, 2 * distanceExp)
          / Math.pow(di, 2 * distanceExp);
    }
    if (weight == 0) {
    	weight = 1;
    }
    return (1 / weight);
  }

